pipeline GoodsTransportedByTrainPipeline {

    GoodsTransportedByTrainExtractor
        -> GoodsTransportedByTrainTextFileInterpreter
        -> GoodsTransportedByTrainCSVInterpreter
        -> MetadataDeleter
        -> TimeAndTransportedGoodsHeaderWriter
        -> QuantityHeaderWriter
        -> GoodsTransportedByTrainTableInterpreter
        -> GoodsTransportedByTrainLoader;

    block GoodsTransportedByTrainExtractor oftype HttpExtractor {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }

    block GoodsTransportedByTrainTextFileInterpreter oftype TextFileInterpreter {}
    
    block GoodsTransportedByTrainCSVInterpreter oftype CSVInterpreter {
        delimiter: ';';
    }

    block MetadataDeleter oftype RowDeleter {
        delete: [row 1, row 2, row 3, row 4, row 5, row 6, row 41337, row 41338, row 41339];
    }

    block TimeAndTransportedGoodsHeaderWriter oftype CellWriter {
        at: range A1:E1; 
        write: ['year', 'month', 'goods_id', 'goods_name', 'goods_source'];
    }

    block QuantityHeaderWriter oftype CellWriter {
        at: range AT1:AU1; 
        write: ['abroad', 'total'];
    }
    
    block GoodsTransportedByTrainTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            'year' oftype PositiveInteger,
            'month' oftype GermanMonth,
            'goods_id' oftype GoodsId,
            'goods_name' oftype text,
            'goods_source' oftype text,
            'abroad' oftype PositiveInteger,
            'total' oftype PositiveInteger
        ];
    }

    block GoodsTransportedByTrainLoader oftype SQLiteLoader {
        table: 'goods';
        file: './goodsTransportedByTrain.sqlite';
    }
}

valuetype PositiveInteger oftype integer {
    constraints : [
        GreaterThanZero
    ]; 
}

constraint GreaterThanZero on decimal :
    value >= 0;

valuetype GermanMonth oftype text {
    constraints : [
        ValidGermanMonth
    ]; 
}

constraint ValidGermanMonth on text :
    value in ["Januar", "Februar", "MÃ¤rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"];

valuetype GoodsId oftype text {
    constraints : [
        ValidGoodsId
    ]; 
}

// must start with NST-7 followed by three numbers or capital letters
constraint ValidGoodsId on text :
    value matches /^NST7-[A-Z0-9]{3}$/;
